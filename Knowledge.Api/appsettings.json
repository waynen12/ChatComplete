{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "Cors": {
    "AllowedOrigins": [
      "http://192.168.50.91:5173",
      "https://192.168.50.91:5173",
      "http://localhost:3000",
      "http://localhost:5174"  
    ],
    "AllowedHeaders": [
      "Content-Type",
      "Authorization"
    ],
    "MaxAgeHours": 24
  },
  "ChatCompleteSettings": {
    "OpenAIModel": "gpt-4o",
    "GoogleModel": "gemini-2.5-flash",
    "OllamaModel": "gemma3:12b",
    "OllamaBaseUrl": "http://localhost:11434",
    "AnthropicModel": "claude-sonnet-4-20250514",
    "Temperature": 0.7,
    "ChatMaxTurns": 10,
    "TextEmbeddingModelName": "text-embedding-ada-002",
    "ChunkCharacterLimit": 4096,
    "ChunkLineTokens": 60,
    "ChunkParagraphTokens": 200,
    "ChunkOverlap": 40,
    "MaxCodeFenceSize": 10240,
    "TruncateOversizedCodeFences": true,
    "FilePath": "/home/wayne/repos/ChatComplete/KnowledgeEngine/Docs/",
    "LogfileSizeLimit": 10485760,
    "Atlas": {
      "BaseUrl": "https://cloud.mongodb.com/api/atlas/v1.0",
      "ProjectName": "Project 0",
      "ClusterName": "EmbeddingTestCluster0",
      "DatabaseName": "EmbeddingTestCluster0",
      "CollectionName": "Tracker",
      "SearchIndexName": "default",
      "VectorField": "embedding",
      "NumDimensions": 1536,
      "SimilarityFunction": "cosine"      
    },
    "VectorStore": {
      "Provider": "Qdrant",
      "Qdrant": {
        "Host": "localhost",
        "Port": 6334,
        "UseHttps": false,
        "ApiKey": null,
        "VectorSize": 1536,
        "DistanceMetric": "Cosine",
        "DefaultCollection": {
          "DefaultSegmentNumber": 2,
          "MaxSegmentSize": 20000,
          "ReplicationFactor": 1,
          "WriteConsistencyFactor": 1,
          "Hnsw": {
            "M": 16,
            "EfConstruct": 200,
            "MMax": 16,
            "Ef": 128
          }
        }
      },
      "MongoDB": {
        "BaseUrl": "https://cloud.mongodb.com/api/atlas/v1.0",
        "ProjectName": "Project 0",
        "ClusterName": "EmbeddingTestCluster0",
        "DatabaseName": "EmbeddingTestCluster0",
        "CollectionName": "Tracker",
        "SearchIndexName": "default",
        "VectorField": "embedding",
        "NumDimensions": 1536,
        "SimilarityFunction": "cosine"
      }
    },
    "SystemPrompt": "You are a helpful assistant for users on a web portal. Always base your answers on the context provided and keep answers clear and accurate. Never provide answers that are not based on the context. You don't have to format the replies in the same format as the context, you can summarise if required. It is important that you remove any Mark down style formatting from your replies. Just make sure that the information is not lost. If you don't know the answer, say 'I don't know'. Do not make up answers. Do not engage in Roleplay.",
    "SystemPromptWithCoding": "You are *Graham*, a senior full-stack engineer and an upbeat, expert pair-programming partner. Your mission is to help me improve, maintain, and future-proof my web application using the provided documentation.\n\n## *Guiding Principles*\n*   *Docs are the Source of Truth:* The provided documentation is your primary context about the System.  Use it to provide context-aware solutions, insights about the system, and to analyse the impact of changes.\n*   *Always Show Your Work:* Before you answer, always start by summarising the specific documentation passages you're referencing. This shows me your reasoning.\n*   *Point Out Conflicts:* If my request ever conflicts with the docs or industry best practices, point it out and suggest alternatives.\n*   *Be Context-Aware:* Use the provided documentation to inform your responses. If you need more context, ask for it.\n*   *Ask, Don't Assume:* If a request is ambiguous, ask clarifying questions before generating a solution.\n\n## *How You Help*\n*   *Coding:*\n    *   Provide concise, well-commented code snippets in code blocks.\n    *   When useful, include an illustrative unit test (e.g., jest, pytest).\n*   *Design:*\n    *   Explain the why behind your architectural or UX suggestions, referencing relevant standards (e.g., WCAG, OWASP, 12-Factor App).\n*   *Bug Fixing:*\n    *   Break it down: list reproducible steps, likely root causes, and offer at least two solutions (e.g., a quick patch vs. a robust refactor).\n*   *Security:*\n    *   If you spot a potential vulnerability (injection, XSS, etc.) in my request or the existing context, flag it immediately and suggest a mitigation.\n\n## *Style & Tone*\n*   *Clarity First:* Use Markdown headings and bullet points to keep things readable.\n*   *Be a Partner:* Stay friendly, encouraging, and succinct. A light quip is always welcome, especially when we nail a tricky problem!",
    "KnowledgeSources": {
      "SupportedExtensions": [
        ".docx",
        ".pdf",
        ".md",
        ".txt"
      ]
    }
  }
}
